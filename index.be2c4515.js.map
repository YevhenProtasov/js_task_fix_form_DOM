{"mappings":"I,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCgBA,SAAS,EAAY,CAAG,EACtB,IAAM,EAAU,EAAI,KAAK,CAAC,IACpB,EAAM,EAAE,CACV,EAAO,GAiBX,OAfA,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACM,IAAO,EAAG,WAAW,KACvB,EAAI,IAAI,CAAC,GACT,EAAO,IAGJ,EAGH,GAAQ,EAFR,GAAQ,EAAG,WAAW,EAI1B,GAEA,EAAI,IAAI,CAAC,GAEF,EAAI,IAAI,CAAC,IAClB,CAjCA,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAFmB,SAAS,gBAAgB,CAAC,W,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAEtC,OAAO,CAAC,SAAC,CAAhB,EACE,IAAQ,EAAwB,EAAxB,EAAA,CAAI,EAAoB,EAApB,IAAZ,CACM,EAAQ,SAAS,aAAa,CAAC,SAErC,EAAM,aAAa,CAAC,WAAW,CAAC,GAChC,EAAM,SAAS,CAAC,GAAG,CAAC,eACpB,EAAM,WAAW,CAAG,EAAY,GAChC,EAAM,YAAY,CAAC,MAAO,GAAM,MAAA,CAAH,IAE7B,EAAM,YAAY,CAAC,cAAe,GAA0B,MAAA,CAAvB,EAAY,IACnD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar inputs = _to_consumable_array(document.querySelectorAll(\"input\"));\ninputs.forEach(function(input) {\n    var id = input.id, inputName = input.name;\n    var label = document.createElement(\"label\");\n    input.parentElement.appendChild(label);\n    label.classList.add(\"field-label\");\n    label.textContent = prepareText(inputName);\n    label.setAttribute(\"for\", \"\".concat(id));\n    input.setAttribute(\"placeholder\", \"\".concat(prepareText(inputName)));\n});\nfunction prepareText(str) {\n    var letters = str.split(\"\");\n    var res = [];\n    var word = \"\";\n    letters.forEach(function(ch) {\n        if (ch === ch.toUpperCase()) {\n            res.push(word);\n            word = \"\";\n        }\n        if (!word) word += ch.toUpperCase();\n        else word += ch;\n    });\n    res.push(word);\n    return res.join(\" \");\n}\n\n//# sourceMappingURL=index.be2c4515.js.map\n","'use strict';\n\nconst inputs = [...document.querySelectorAll('input')];\n\ninputs.forEach((input) => {\n  const { id, name: inputName } = input;\n  const label = document.createElement('label');\n\n  input.parentElement.appendChild(label);\n  label.classList.add('field-label');\n  label.textContent = prepareText(inputName);\n  label.setAttribute('for', `${id}`);\n\n  input.setAttribute('placeholder', `${prepareText(inputName)}`);\n});\n\nfunction prepareText(str) {\n  const letters = str.split('');\n  const res = [];\n  let word = '';\n\n  letters.forEach((ch) => {\n    if (ch === ch.toUpperCase()) {\n      res.push(word);\n      word = '';\n    }\n\n    if (!word) {\n      word += ch.toUpperCase();\n    } else {\n      word += ch;\n    }\n  });\n\n  res.push(word);\n\n  return res.join(' ');\n}\n"],"names":["arr","_array_like_to_array","len","length","i","arr2","Array","prepareText","str","letters","split","res","word","forEach","ch","toUpperCase","push","join","inputs","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","input","id","inputName","label","createElement","parentElement","appendChild","classList","add","textContent","setAttribute","concat"],"version":3,"file":"index.be2c4515.js.map"}